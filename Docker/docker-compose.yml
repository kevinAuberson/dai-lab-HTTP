version: '3.8'
services:

  # Nginx service configuration
  nginx:
    build:
      context: Nginx/  # Set the build context to the Nginx directory
    deploy:
      replicas: 2  # Deploy 2 replica
    labels:
      - traefik.http.routers.nginx.rule=Host(`nginx.localhost`)  # Traefik routing rule for Nginx
      - traefik.http.services.nginx.loadbalancer.server.port=80  # Specify the port for load balancing

  # Javalin service configuration
  javalin:
    build:
      context: Javalin/  # Set the build context to the Javalin directory
    deploy:
      replicas: 2  # Deploy 2 replica
    labels:
      - traefik.http.routers.javalin.rule=Host(`javalin.localhost`)  # Traefik routing rule for Javalin
      - traefik.http.services.javalin.loadbalancer.server.port=80  # Specify the port for load balancing
      - traefik.http.services.javalin.loadbalancer.sticky=true # activate sticky session
      - traefik.http.services.javalin.loadbalancer.sticky.cookie.name=StickyCookie # name of the cookies

  # Traefik service configuration
  traefik:
    image: traefik:latest  # Use the latest Traefik image
    command:
      - --api.insecure=true  # Enable Traefik dashboard (insecure mode)
      - --providers.docker  # Use Docker as the provider
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Mount Docker socket for communication
    ports:
      - "80:80"  # Expose port 80 for web sites (nginx and javalin)
      - "8080:8080"  # Expose port 8080 for Traefik dashboard
